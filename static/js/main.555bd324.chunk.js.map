{"version":3,"sources":["index.js"],"names":["Slot","className","onClick","this","props","value","React","Component","Board","state","squares","turn","conclusion","X_win","O_win","i","new_squares","next_turn","setState","statement","winnerX","winnerO","alert","reset","handleClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.555bd324.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { isFulfilled } from \"q\";\n\nclass Slot extends React.Component {\n  render() {\n    return (\n      <button className=\"square\" onClick={this.props.onClick}>\n        {this.props.value}\n      </button>\n    );\n  }\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: [null, null, null, null, null, null, null, null, null],\n      turn: \"X\",\n      conclusion: \"It is X's turn\",\n      X_win: 0,\n      O_win: 0,\n    };\n  }\n\n  handleClick(i) {\n    //Check to see if the current slot is filled\n    var new_squares = [...this.state.squares];\n    var next_turn = this.state.turn;\n\n    if (new_squares[i]) {\n      this.setState({\n        squares: new_squares,\n        turn: next_turn,\n        conclusion: \"It is \" + next_turn + \"turn\"\n      });\n    } else if (this.state.turn == \"X\") {\n      new_squares[i] = \"X\";\n      next_turn = \"O\";\n    } else {\n      new_squares[i] = \"O\";\n      next_turn = \"X\";\n    }\n\n    this.setState({\n      squares: new_squares,\n      turn: next_turn,\n      conclusion: \"It is \" + next_turn + \"'s \" + \"turn\"\n    });\n  }\n\n  reset() {\n    this.setState({\n      squares: [null, null, null, null, null, null, null, null, null],\n      turn: \"X\",\n      conclusion: \"It is X's turn\"\n    });\n  }\n\n  render() {\n    var statement = this.state.conclusion;\n \n    let winnerX = {\n      first:\n        this.state.squares[0] == \"X\" &&\n        this.state.squares[1] == \"X\" &&\n        this.state.squares[2] == \"X\",\n      second:\n        this.state.squares[3] == \"X\" &&\n        this.state.squares[4] == \"X\" &&\n        this.state.squares[5] == \"X\",\n      third:\n        this.state.squares[6] == \"X\" &&\n        this.state.squares[7] == \"X\" &&\n        this.state.squares[8] == \"X\",\n      fourth:\n        this.state.squares[0] == \"X\" &&\n        this.state.squares[3] == \"X\" &&\n        this.state.squares[6] == \"X\",\n      fifth:\n        this.state.squares[1] == \"X\" &&\n        this.state.squares[4] == \"X\" &&\n        this.state.squares[7] == \"X\",\n      sixth:\n        this.state.squares[2] == \"X\" &&\n        this.state.squares[5] == \"X\" &&\n        this.state.squares[8] == \"X\",\n      seventh:\n        this.state.squares[0] == \"X\" &&\n        this.state.squares[4] == \"X\" &&\n        this.state.squares[8] == \"X\",\n      eighth:\n        this.state.squares[6] == \"X\" &&\n        this.state.squares[4] == \"X\" &&\n        this.state.squares[2] == \"X\"\n    };\n\n    let winnerO = {\n      first:\n        this.state.squares[0] == \"O\" &&\n        this.state.squares[1] == \"O\" &&\n        this.state.squares[2] == \"O\",\n      second:\n        this.state.squares[3] == \"O\" &&\n        this.state.squares[4] == \"O\" &&\n        this.state.squares[5] == \"O\",\n      third:\n        this.state.squares[6] == \"O\" &&\n        this.state.squares[7] == \"O\" &&\n        this.state.squares[8] == \"O\",\n      fourth:\n        this.state.squares[0] == \"O\" &&\n        this.state.squares[3] == \"O\" &&\n        this.state.squares[6] == \"O\",\n      fifth:\n        this.state.squares[1] == \"O\" &&\n        this.state.squares[4] == \"O\" &&\n        this.state.squares[7] == \"O\",\n      sixth:\n        this.state.squares[2] == \"O\" &&\n        this.state.squares[5] == \"O\" &&\n        this.state.squares[8] == \"O\",\n      seventh:\n        this.state.squares[0] == \"O\" &&\n        this.state.squares[4] == \"O\" &&\n        this.state.squares[8] == \"O\",\n      eighth:\n        this.state.squares[6] == \"O\" &&\n        this.state.squares[4] == \"O\" &&\n        this.state.squares[2] == \"O\"\n    };\n\n    if (\n      winnerX.first ||\n      winnerX.second ||\n      winnerX.third ||\n      winnerX.fourth ||\n      winnerX.fifth ||\n      winnerX.sixth ||\n      winnerX.seventh ||\n      winnerX.eighth\n    ) {\n      statement = \"The Winner Is X\";\n      this.setState(state => ({\n        X_win: state.X_win + 1\n      }))\n      alert(\"The Winner Is X. Game Reset.\");\n      this.reset();\n    } else if (\n      winnerO.first ||\n      winnerO.second ||\n      winnerO.third ||\n      winnerO.fourth ||\n      winnerO.fifth ||\n      winnerO.sixth ||\n      winnerO.seventh ||\n      winnerO.eighth\n    ) {\n      statement = \"The Winner Is O\";\n      this.setState(state => ({\n        O_win: state.O_win + 1\n      }))\n      alert(\"The Winner Is O. Game Reset.\");\n      this.reset();\n    }\n\n    return (\n      <div>\n        <br />\n        <h1 className=\"center\">Welcome to Tic Tac Toe</h1>\n\n        <div className=\"flex-container\">\n          <Slot\n            value={this.state.squares[0]}\n            onClick={() => this.handleClick(0)}\n          />\n          <Slot\n            value={this.state.squares[1]}\n            onClick={() => this.handleClick(1)}\n          />\n          <Slot\n            value={this.state.squares[2]}\n            onClick={() => this.handleClick(2)}\n          />\n        </div>\n        <div className=\"flex-container\">\n          <Slot\n            value={this.state.squares[3]}\n            onClick={() => this.handleClick(3)}\n          />\n          <Slot\n            value={this.state.squares[4]}\n            onClick={() => this.handleClick(4)}\n          />\n          <Slot\n            value={this.state.squares[5]}\n            onClick={() => this.handleClick(5)}\n          />\n        </div>\n        <div className=\"flex-container\">\n          <Slot\n            value={this.state.squares[6]}\n            onClick={() => this.handleClick(6)}\n          />\n          <Slot\n            value={this.state.squares[7]}\n            onClick={() => this.handleClick(7)}\n          />\n          <Slot\n            value={this.state.squares[8]}\n            onClick={() => this.handleClick(8)}\n          />\n        </div>\n        <br />\n        <div className=\"center\">{statement}</div>\n        <br />\n        <button className=\"center-button\" onClick={() => this.reset()}>\n          Reset\n        </button>\n        <br />\n        <div className=\"center\">X's victory : {this.state.X_win} </div>\n        <div className=\"center\">O's victory : {this.state.O_win} </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Board />, document.getElementById(\"root\"));\n"],"sourceRoot":""}